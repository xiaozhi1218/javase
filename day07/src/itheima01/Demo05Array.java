package itheima01;
/*
    数组的第三种初始化方式(简化格式静态初始化:指定数组中的每个元素)
        1.格式:
            数据类型[] 数组名称 = {元素1,元素2,元素3,...元素n};

        2.练习:
            (1)创建一个int类型的数组,可以存储多个int数据100,200,300,给该数组起个名称叫做arrayA
            (2)创建一个double类型的数组,可以存储多个double数据1.1,2.2,3.3,4.4,5.5,6.6,7.7,给该数组起个名称叫做arrayB
            (3)创建一个char类型的数组,可以存储多个char数据'真','的','好','想','你',给该数组起个名称叫做arrayC

        3.注意:
            (1)右侧不用写长度,JVM根据{}中数组元素的数量推导长度
            (2)虽然没有写new,底层仍然有new的过程
            (3)动态初始化和标准格式的静态初始化,可以分两步完成
            (4)简化格式静态初始化,不能分成两步完成
 */
public class Demo05Array {
    public static void main(String[] args) {
        //(1)创建一个int类型的数组,可以存储多个int数据100,200,300,给该数组起个名称叫做arrayA
        int[] arrayA = {100,200,300};

        //(2)创建一个double类型的数组,可以存储多个double数据1.1,2.2,3.3,4.4,5.5,6.6,7.7,给该数组起个名称叫做arrayB
        double[] arrayB = {1.1,2.2,3.3,4.4,5.5,6.6,7.7};

        //(3)创建一个char类型的数组,可以存储多个char数据'真','的','好','想','你',给该数组起个名称叫做arrayC
        char[] arrayC = {'真','的','好','想','你'};

        //定义int变量,未赋值
        int num;
        num = 10;//赋值
        System.out.println(num);//10
        num = 100;//重新赋值
        System.out.println(num);//100
        System.out.println("-------------------");
        //定义数组变量,未赋值
        int[] arr;
        arr = new int[3];//动态初始化指定数组长度
        arr = new int[]{10,20,30};//标准格式静态初始化

        System.out.println("-------------------");
        int[] arr2;
        //arr2 = {100,200,300};//错误: 简化格式静态初始化,不能分成两步完成

    }
}
